#include "stdafx.h"
#include "JiaxingData.h"

void JiaxingData::setOD(std::vector<passengerOD*> &passengerGroups, std::vector<std::vector<std::string>>& allPassegnerPath) {
	//²åÈëOD*********************************************************************
	int ptNo = 0;
	//²åÈë³Ë¿ÍOD****************************************************
	passengerOD* od1 = new passengerOD(ptNo, 0, 1);

	double* pd1 = new double[T];
	pd1[0] = 0;
	pd1[1] = 0;
	pd1[2] = 0;
	pd1[3] = 0;
	pd1[4] = 0;
	pd1[5] = 1;
	pd1[6] = 1;
	pd1[7] = 1;
	pd1[8] = 2;
	pd1[9] = 2;
	pd1[10] = 2;
	pd1[11] = 2;
	pd1[12] = 5;
	pd1[13] = 5;
	pd1[14] = 5;
	pd1[15] = 5;
	pd1[16] = 5;
	pd1[17] = 2;
	pd1[18] = 2;
	pd1[19] = 2;
	pd1[20] = 2;
	pd1[21] = 2;
	pd1[22] = 1;
	pd1[23] = 1;
	pd1[24] = 1;
	pd1[25] = 1;
	pd1[26] = 1;
	pd1[27] = 1;
	pd1[28] = 1;
	pd1[29] = 1;
	od1->setPassengerFlow(pd1);

	std::vector<int> path11;
	path11.push_back(419);
	path11.push_back(22);
	path11.push_back(454);
	od1->addPassengerPath(0, 2, path11);
	passengerGroups.push_back(od1);

	std::vector<std::string> ph1;
	ph1.push_back("419|22|454|");
	allPassegnerPath.push_back(ph1);
	ptNo++;
	//*****************************************************************************
	passengerOD* od2 = new passengerOD(ptNo, 4, 1);

	double* pd2 = new double[T];
	pd2[0] = 5;
	pd2[1] = 5;
	pd2[2] = 5;
	pd2[3] = 6;
	pd2[4] = 6;
	pd2[5] = 6;
	pd2[6] = 6;
	pd2[7] = 12;
	pd2[8] = 12;
	pd2[9] = 12;
	pd2[10] = 12;
	pd2[11] = 20;
	pd2[12] = 30;
	pd2[13] = 30;
	pd2[14] = 15;
	pd2[15] = 15;
	pd2[16] = 15;
	pd2[17] = 12;
	pd2[18] = 12;
	pd2[19] = 12;
	pd2[20] = 12;
	pd2[21] = 5;
	pd2[22] = 5;
	pd2[23] = 5;
	pd2[24] = 5;
	pd2[25] = 5;
	pd2[26] = 5;
	pd2[27] = 5;
	pd2[28] = 5;
	pd2[29] = 1;
	od2->setPassengerFlow(pd2);

	//4-59-58-57-56-55-1
	std::vector<int> path21;
	path21.push_back(519);
	path21.push_back(17);
	path21.push_back(18);
	path21.push_back(19);
	path21.push_back(20);
	path21.push_back(455);
	od2->addPassengerPath(0, 2, path21);
	passengerGroups.push_back(od2);

	std::vector<std::string> ph2;
	ph2.push_back("519|17|18|19|20|455|");
	allPassegnerPath.push_back(ph2);
	ptNo++;
	//*****************************************************************************

	passengerOD* od3 = new passengerOD(ptNo, 5, 1);

	double* pd3 = new double[T];
	pd3[0] = 0;
	pd3[1] = 0;
	pd3[2] = 0;
	pd3[3] = 0;
	pd3[4] = 0;
	pd3[5] = 1;
	pd3[6] = 1;
	pd3[7] = 1;
	pd3[8] = 2;
	pd3[9] = 2;
	pd3[10] = 2;
	pd3[11] = 4;
	pd3[12] = 5;
	pd3[13] = 5;
	pd3[14] = 5;
	pd3[15] = 5;
	pd3[16] = 3;
	pd3[17] = 3;
	pd3[18] = 2;
	pd3[19] = 2;
	pd3[20] = 2;
	pd3[21] = 2;
	pd3[22] = 1;
	pd3[23] = 1;
	pd3[24] = 1;
	pd3[25] = 1;
	pd3[26] = 1;
	pd3[27] = 1;
	pd3[28] = 0;
	pd3[29] = 0;
	od3->setPassengerFlow(pd3);

	//5-58-57-56-55-1
	std::vector<int> path31;
	path31.push_back(540);
	path31.push_back(18);
	path31.push_back(19);
	path31.push_back(20);
	path31.push_back(455);
	od3->addPassengerPath(0, 2, path31);
	passengerGroups.push_back(od3);

	std::vector<std::string> ph3;
	ph3.push_back("540|18|19|20|455|");
	allPassegnerPath.push_back(ph3);
	ptNo++;
	//*****************************************************************************

	passengerOD* od4 = new passengerOD(ptNo, 9, 1);

	double* pd4 = new double[T];
	pd4[0] = 0;
	pd4[1] = 0;
	pd4[2] = 0;
	pd4[3] = 0;
	pd4[4] = 0;
	pd4[5] = 2;
	pd4[6] = 2;
	pd4[7] = 2;
	pd4[8] = 4;
	pd4[9] = 4;
	pd4[10] = 4;
	pd4[11] = 8;
	pd4[12] = 10;
	pd4[13] = 10;
	pd4[14] = 10;
	pd4[15] = 10;
	pd4[16] = 6;
	pd4[17] = 6;
	pd4[18] = 4;
	pd4[19] = 4;
	pd4[20] = 2;
	pd4[21] = 2;
	pd4[22] = 2;
	pd4[23] = 2;
	pd4[24] = 1;
	pd4[25] = 1;
	pd4[26] = 1;
	pd4[27] = 1;
	pd4[28] = 0;
	pd4[29] = 0;
	od4->setPassengerFlow(pd4);

	//9-63-62-61-1
	std::vector<int> path41;
	path41.push_back(607);
	path41.push_back(33);
	path41.push_back(34);
	path41.push_back(454);
	od4->addPassengerPath(0, 2, path41);
	passengerGroups.push_back(od4);

	std::vector<std::string> ph4;
	ph4.push_back("607|33|34|454|");
	allPassegnerPath.push_back(ph4);
	ptNo++;
	//*****************************************************************************

	passengerOD* od5 = new passengerOD(ptNo, 13, 1);

	double* pd5 = new double[T];
	pd5[0] = 0;
	pd5[1] = 0;
	pd5[2] = 0;
	pd5[3] = 0;
	pd5[4] = 0;
	pd5[5] = 2;
	pd5[6] = 2;
	pd5[7] = 2;
	pd5[8] = 4;
	pd5[9] = 4;
	pd5[10] = 4;
	pd5[11] = 8;
	pd5[12] = 10;
	pd5[13] = 10;
	pd5[14] = 10;
	pd5[15] = 10;
	pd5[16] = 6;
	pd5[17] = 6;
	pd5[18] = 4;
	pd5[19] = 4;
	pd5[20] = 2;
	pd5[21] = 2;
	pd5[22] = 2;
	pd5[23] = 2;
	pd5[24] = 1;
	pd5[25] = 1;
	pd5[26] = 1;
	pd5[27] = 1;
	pd5[28] = 0;
	pd5[29] = 0;
	od5->setPassengerFlow(pd5);

	//13-65-64-63-62-61-1
	std::vector<int> path51;
	path51.push_back(653);
	path51.push_back(31);
	path51.push_back(32);
	path51.push_back(33);
	path51.push_back(34);
	path51.push_back(454);
	od5->addPassengerPath(0, 2, path51);
	passengerGroups.push_back(od5);

	std::vector<std::string> ph5;
	ph5.push_back("653|31|32|33|34|454|");
	allPassegnerPath.push_back(ph5);
	ptNo++;
	//*****************************************************************************

	passengerOD* od6 = new passengerOD(ptNo, 0, 2);

	double* pd6 = new double[T];
	pd6[0] = 5;
	pd6[1] = 5;
	pd6[2] = 5;
	pd6[3] = 6;
	pd6[4] = 6;
	pd6[5] = 6;
	pd6[6] = 6;
	pd6[7] = 12;
	pd6[8] = 12;
	pd6[9] = 12;
	pd6[10] = 12;
	pd6[11] = 15;
	pd6[12] = 20;
	pd6[13] = 20;
	pd6[14] = 20;
	pd6[15] = 20;
	pd6[16] = 15;
	pd6[17] = 12;
	pd6[18] = 12;
	pd6[19] = 12;
	pd6[20] = 12;
	pd6[21] = 5;
	pd6[22] = 5;
	pd6[23] = 5;
	pd6[24] = 5;
	pd6[25] = 5;
	pd6[26] = 5;
	pd6[27] = 5;
	pd6[28] = 5;
	pd6[29] = 1;
	od6->setPassengerFlow(pd6);

	//0-60-61-62-2
	std::vector<int> path61;
	path61.push_back(419);
	path61.push_back(22);
	path61.push_back(23);
	path61.push_back(485);
	od6->addPassengerPath(0, 2, path61);
	passengerGroups.push_back(od6);

	std::vector<std::string> ph6;
	ph6.push_back("419|22|23|485|");
	allPassegnerPath.push_back(ph6);
	ptNo++;
	//*****************************************************************************

	passengerOD* od7 = new passengerOD(ptNo, 1, 2);

	double* pd7 = new double[T];
	pd7[0] = 5;
	pd7[1] = 5;
	pd7[2] = 5;
	pd7[3] = 6;
	pd7[4] = 10;
	pd7[5] = 10;
	pd7[6] = 12;
	pd7[7] = 12;
	pd7[8] = 12;
	pd7[9] = 12;
	pd7[10] = 12;
	pd7[11] = 15;
	pd7[12] = 20;
	pd7[13] = 30;
	pd7[14] = 30;
	pd7[15] = 20;
	pd7[16] = 20;
	pd7[17] = 15;
	pd7[18] = 12;
	pd7[19] = 12;
	pd7[20] = 12;
	pd7[21] = 10;
	pd7[22] = 10;
	pd7[23] = 10;
	pd7[24] = 10;
	pd7[25] = 10;
	pd7[26] = 5;
	pd7[27] = 5;
	pd7[28] = 5;
	pd7[29] = 1;
	od7->setPassengerFlow(pd7);

	//1-61-62-2
	std::vector<int> path71;
	path71.push_back(439);
	path71.push_back(23);
	path71.push_back(485);
	od7->addPassengerPath(0, 2, path71);
	passengerGroups.push_back(od7);

	std::vector<std::string> ph7;
	ph7.push_back("439|23|485|");
	allPassegnerPath.push_back(ph7);
	ptNo++;
	//*****************************************************************************

	passengerOD* od8 = new passengerOD(ptNo, 4, 2);

	double* pd8 = new double[T];
	pd8[0] = 0;
	pd8[1] = 0;
	pd8[2] = 0;
	pd8[3] = 0;
	pd8[4] = 0;
	pd8[5] = 2;
	pd8[6] = 2;
	pd8[7] = 2;
	pd8[8] = 4;
	pd8[9] = 4;
	pd8[10] = 4;
	pd8[11] = 8;
	pd8[12] = 10;
	pd8[13] = 10;
	pd8[14] = 10;
	pd8[15] = 10;
	pd8[16] = 6;
	pd8[17] = 6;
	pd8[18] = 4;
	pd8[19] = 4;
	pd8[20] = 2;
	pd8[21] = 2;
	pd8[22] = 2;
	pd8[23] = 2;
	pd8[24] = 1;
	pd8[25] = 1;
	pd8[26] = 1;
	pd8[27] = 1;
	pd8[28] = 0;
	pd8[29] = 0;
	od8->setPassengerFlow(pd8);

	//4-59-58-57-56-2
	std::vector<int> path81;
	path81.push_back(519);
	path81.push_back(17);
	path81.push_back(18);
	path81.push_back(19);
	path81.push_back(486);
	od8->addPassengerPath(0, 2, path81);
	passengerGroups.push_back(od8);

	std::vector<std::string> ph8;
	ph8.push_back("519|17|18|19|486|");
	allPassegnerPath.push_back(ph8);
	ptNo++;
	//*****************************************************************************

	passengerOD* od9 = new passengerOD(ptNo, 12, 2);

	double* pd9 = new double[T];
	pd9[0] = 0;
	pd9[1] = 0;
	pd9[2] = 0;
	pd9[3] = 0;
	pd9[4] = 0;
	pd9[5] = 1;
	pd9[6] = 1;
	pd9[7] = 1;
	pd9[8] = 2;
	pd9[9] = 2;
	pd9[10] = 2;
	pd9[11] = 2;
	pd9[12] = 5;
	pd9[13] = 5;
	pd9[14] = 5;
	pd9[15] = 5;
	pd9[16] = 5;
	pd9[17] = 2;
	pd9[18] = 2;
	pd9[19] = 2;
	pd9[20] = 2;
	pd9[21] = 2;
	pd9[22] = 1;
	pd9[23] = 1;
	pd9[24] = 1;
	pd9[25] = 1;
	pd9[26] = 1;
	pd9[27] = 1;
	pd9[28] = 1;
	pd9[29] = 1;
	od9->setPassengerFlow(pd9);

	//12-49-48-47-51-52-2
	std::vector<int> path91;
	path91.push_back(645);
	path91.push_back(3);
	path91.push_back(4);
	path91.push_back(467);
	path91.push_back(7);
	path91.push_back(487);
	od9->addPassengerPath(0, 2, path91);
	passengerGroups.push_back(od9);

	std::vector<std::string> ph9;
	ph9.push_back("645|3|4|467|7|487|");
	allPassegnerPath.push_back(ph9);
	ptNo++;
	//*****************************************************************************

	passengerOD* od10 = new passengerOD(ptNo, 4, 3);

	double* pd10 = new double[T];
	pd10[0] = 0;
	pd10[1] = 0;
	pd10[2] = 0;
	pd10[3] = 1;
	pd10[4] = 1;
	pd10[5] = 2;
	pd10[6] = 2;
	pd10[7] = 2;
	pd10[8] = 2;
	pd10[9] = 2;
	pd10[10] = 4;
	pd10[11] = 4;
	pd10[12] = 5;
	pd10[13] = 5;
	pd10[14] = 10;
	pd10[15] = 10;
	pd10[16] = 5;
	pd10[17] = 5;
	pd10[18] = 5;
	pd10[19] = 2;
	pd10[20] = 2;
	pd10[21] = 2;
	pd10[22] = 2;
	pd10[23] = 2;
	pd10[24] = 1;
	pd10[25] = 1;
	pd10[26] = 1;
	pd10[27] = 1;
	pd10[28] = 1;
	pd10[29] = 1;
	od10->setPassengerFlow(pd10);

	//4-59-58-57-3
	std::vector<int> path101;
	path101.push_back(519);
	path101.push_back(17);
	path101.push_back(18);
	path101.push_back(510);
	od10->addPassengerPath(0, 2, path101);
	passengerGroups.push_back(od10);

	std::vector<std::string> ph10;
	ph10.push_back("519|17|18|510|");
	allPassegnerPath.push_back(ph10);
	ptNo++;
	//*****************************************************************************

	passengerOD* od11 = new passengerOD(ptNo, 13, 3);

	double* pd11 = new double[T];
	pd11[0] = 0;
	pd11[1] = 0;
	pd11[2] = 0;
	pd11[3] = 1;
	pd11[4] = 1;
	pd11[5] = 1;
	pd11[6] = 2;
	pd11[7] = 2;
	pd11[8] = 2;
	pd11[9] = 2;
	pd11[10] = 3;
	pd11[11] = 3;
	pd11[12] = 5;
	pd11[13] = 5;
	pd11[14] = 8;
	pd11[15] = 8;
	pd11[16] = 5;
	pd11[17] = 5;
	pd11[18] = 3;
	pd11[19] = 3;
	pd11[20] = 2;
	pd11[21] = 2;
	pd11[22] = 1;
	pd11[23] = 1;
	pd11[24] = 1;
	pd11[25] = 1;
	pd11[26] = 1;
	pd11[27] = 0;
	pd11[28] = 0;
	pd11[29] = 0;
	od11->setPassengerFlow(pd11);

	//13-43-42-41-40-39-3
	std::vector<int> path111;
	path111.push_back(651);
	path111.push_back(71);
	path111.push_back(72);
	path111.push_back(73);
	path111.push_back(74);
	path111.push_back(509);
	od11->addPassengerPath(0, 6, path111);
	passengerGroups.push_back(od11);

	std::vector<std::string> ph11;
	ph11.push_back("651|71|72|73|74|509|");
	allPassegnerPath.push_back(ph11);
	ptNo++;
	//*****************************************************************************

	passengerOD* od12 = new passengerOD(ptNo, 1, 4);

	double* pd12 = new double[T];
	pd12[0] = 1;
	pd12[1] = 1;
	pd12[2] = 1;
	pd12[3] = 2;
	pd12[4] = 2;
	pd12[5] = 2;
	pd12[6] = 4;
	pd12[7] = 4;
	pd12[8] = 4;
	pd12[9] = 4;
	pd12[10] = 6;
	pd12[11] = 6;
	pd12[12] = 12;
	pd12[13] = 12;
	pd12[14] = 20;
	pd12[15] = 20;
	pd12[16] = 12;
	pd12[17] = 12;
	pd12[18] = 6;
	pd12[19] = 6;
	pd12[20] = 4;
	pd12[21] = 4;
	pd12[22] = 4;
	pd12[23] = 2;
	pd12[24] = 2;
	pd12[25] = 2;
	pd12[26] = 2;
	pd12[27] = 1;
	pd12[28] = 1;
	pd12[29] = 1;
	od12->setPassengerFlow(pd12);

	//1-55-56-57-58-59-4
	std::vector<int> path121;
	path121.push_back(440);
	path121.push_back(13);
	path121.push_back(14);
	path121.push_back(15);
	path121.push_back(16);
	path121.push_back(529);
	od12->addPassengerPath(0, 2, path121);
	passengerGroups.push_back(od12);

	std::vector<std::string> ph12;
	ph12.push_back("440|13|14|15|16|529|");
	allPassegnerPath.push_back(ph12);
	ptNo++;
	//*****************************************************************************

	passengerOD* od13 = new passengerOD(ptNo, 2, 4);

	double* pd13 = new double[T];
	pd13[0] = 1;
	pd13[1] = 1;
	pd13[2] = 2;
	pd13[3] = 2;
	pd13[4] = 3;
	pd13[5] = 3;
	pd13[6] = 4;
	pd13[7] = 4;
	pd13[8] = 6;
	pd13[9] = 6;
	pd13[10] = 8;
	pd13[11] = 8;
	pd13[12] = 15;
	pd13[13] = 15;
	pd13[14] = 23;
	pd13[15] = 23;
	pd13[16] = 15;
	pd13[17] = 15;
	pd13[18] = 8;
	pd13[19] = 8;
	pd13[20] = 6;
	pd13[21] = 6;
	pd13[22] = 4;
	pd13[23] = 4;
	pd13[24] = 4;
	pd13[25] = 2;
	pd13[26] = 2;
	pd13[27] = 2;
	pd13[28] = 1;
	pd13[29] = 1;
	od13->setPassengerFlow(pd13);

	//2-56-57-58-59-4
	std::vector<int> path131;
	path131.push_back(471);
	path131.push_back(14);
	path131.push_back(15);
	path131.push_back(16);
	path131.push_back(529);
	od13->addPassengerPath(0, 2, path131);
	passengerGroups.push_back(od13);

	std::vector<std::string> ph13;
	ph13.push_back("471|14|15|16|529|");
	allPassegnerPath.push_back(ph13);
	ptNo++;
	//*****************************************************************************

	passengerOD* od14 = new passengerOD(ptNo, 3, 4);

	double* pd14 = new double[T];
	pd14[0] = 1;
	pd14[1] = 1;
	pd14[2] = 2;
	pd14[3] = 2;
	pd14[4] = 3;
	pd14[5] = 3;
	pd14[6] = 4;
	pd14[7] = 4;
	pd14[8] = 6;
	pd14[9] = 6;
	pd14[10] = 8;
	pd14[11] = 8;
	pd14[12] = 15;
	pd14[13] = 15;
	pd14[14] = 23;
	pd14[15] = 23;
	pd14[16] = 15;
	pd14[17] = 15;
	pd14[18] = 8;
	pd14[19] = 8;
	pd14[20] = 6;
	pd14[21] = 6;
	pd14[22] = 4;
	pd14[23] = 4;
	pd14[24] = 4;
	pd14[25] = 2;
	pd14[26] = 2;
	pd14[27] = 2;
	pd14[28] = 1;
	pd14[29] = 1;
	od14->setPassengerFlow(pd14);

	//3-57-58-59-4
	std::vector<int> path141;
	path141.push_back(500);
	path141.push_back(15);
	path141.push_back(16);
	path141.push_back(529);
	od14->addPassengerPath(0, 2, path141);
	passengerGroups.push_back(od14);

	std::vector<std::string> ph14;
	ph14.push_back("500|15|16|529|");
	allPassegnerPath.push_back(ph14);
	ptNo++;
	//*****************************************************************************

	passengerOD* od15 = new passengerOD(ptNo, 8, 5);

	double* pd15 = new double[T];
	pd15[0] = 1;
	pd15[1] = 1;
	pd15[2] = 1;
	pd15[3] = 2;
	pd15[4] = 2;
	pd15[5] = 2;
	pd15[6] = 2;
	pd15[7] = 2;
	pd15[8] = 3;
	pd15[9] = 3;
	pd15[10] = 4;
	pd15[11] = 4;
	pd15[12] = 7;
	pd15[13] = 7;
	pd15[14] = 10;
	pd15[15] = 10;
	pd15[16] = 7;
	pd15[17] = 7;
	pd15[18] = 4;
	pd15[19] = 4;
	pd15[20] = 3;
	pd15[21] = 3;
	pd15[22] = 3;
	pd15[23] = 3;
	pd15[24] = 2;
	pd15[25] = 2;
	pd15[26] = 2;
	pd15[27] = 2;
	pd15[28] = 1;
	pd15[29] = 1;
	od15->setPassengerFlow(pd15);

	//8-54-55-56-57-58-5
	std::vector<int> path151;
	path151.push_back(595);
	path151.push_back(12);
	path151.push_back(13);
	path151.push_back(14);
	path151.push_back(15);
	path151.push_back(555);
	od15->addPassengerPath(0, 2, path151);
	passengerGroups.push_back(od15);

	std::vector<std::string> ph15;
	ph15.push_back("595|12|13|14|15|555|");
	allPassegnerPath.push_back(ph15);
	ptNo++;
	//*****************************************************************************

	
	passengerOD* od17 = new passengerOD(ptNo, 4, 6);

	double* pd17 = new double[T];
	pd17[0] = 0;
	pd17[1] = 0;
	pd17[2] = 1;
	pd17[3] = 1;
	pd17[4] = 1;
	pd17[5] = 2;
	pd17[6] = 2;
	pd17[7] = 2;
	pd17[8] = 2;
	pd17[9] = 3;
	pd17[10] = 3;
	pd17[11] = 3;
	pd17[12] = 6;
	pd17[13] = 6;
	pd17[14] = 6;
	pd17[15] = 6;
	pd17[16] = 8;
	pd17[17] = 8;
	pd17[18] = 10;
	pd17[19] = 10;
	pd17[20] = 10;
	pd17[21] = 8;
	pd17[22] = 8;
	pd17[23] = 4;
	pd17[24] = 4;
	pd17[25] = 2;
	pd17[26] = 2;
	pd17[27] = 1;
	pd17[28] = 0;
	pd17[29] = 0;
	od17->setPassengerFlow(pd17);

	//4-73-74-6
	std::vector<int> path171;
	path171.push_back(521);
	path171.push_back(43);
	path171.push_back(581);
	od17->addPassengerPath(0, 2, path171);
	passengerGroups.push_back(od17);

	std::vector<std::string> ph17;
	ph17.push_back("521|43|581|");
	allPassegnerPath.push_back(ph17);
	ptNo++;
	//*****************************************************************************

	passengerOD* od18 = new passengerOD(ptNo, 2, 7);

	double* pd18 = new double[T];
	pd18[0] = 0;
	pd18[1] = 0;
	pd18[2] = 1;
	pd18[3] = 1;
	pd18[4] = 1;
	pd18[5] = 1;
	pd18[6] = 1;
	pd18[7] = 2;
	pd18[8] = 2;
	pd18[9] = 2;
	pd18[10] = 2;
	pd18[11] = 3;
	pd18[12] = 3;
	pd18[13] = 3;
	pd18[14] = 4;
	pd18[15] = 4;
	pd18[16] = 5;
	pd18[17] = 5;
	pd18[18] = 5;
	pd18[19] = 5;
	pd18[20] = 3;
	pd18[21] = 3;
	pd18[22] = 1;
	pd18[23] = 1;
	pd18[24] = 0;
	pd18[25] = 0;
	pd18[26] = 0;
	pd18[27] = 0;
	pd18[28] = 0;
	pd18[29] = 0;
	od18->setPassengerFlow(pd18);

	//2-56-57-58-59-73-74-75-7
	std::vector<int> path181;
	path181.push_back(471);
	path181.push_back(14);
	path181.push_back(15);
	path181.push_back(16);
	path181.push_back(526);
	path181.push_back(43);
	path181.push_back(44);
	path181.push_back(592);
	od18->addPassengerPath(0, 2, path181);
	passengerGroups.push_back(od18);

	std::vector<std::string> ph18;
	ph18.push_back("471|14|15|16|526|43|44|592|");
	allPassegnerPath.push_back(ph18);
	ptNo++;
	//*****************************************************************************

	passengerOD* od19 = new passengerOD(ptNo, 1, 9);

	double* pd19 = new double[T];
	pd19[0] = 0;
	pd19[1] = 0;
	pd19[2] = 1;
	pd19[3] = 1;
	pd19[4] = 1;
	pd19[5] = 2;
	pd19[6] = 2;
	pd19[7] = 4;
	pd19[8] = 8;
	pd19[9] = 10;
	pd19[10] = 10;
	pd19[11] = 10;
	pd19[12] = 8;
	pd19[13] = 8;
	pd19[14] = 6;
	pd19[15] = 6;
	pd19[16] = 6;
	pd19[17] = 6;
	pd19[18] = 5;
	pd19[19] = 5;
	pd19[20] = 4;
	pd19[21] = 4;
	pd19[22] = 4;
	pd19[23] = 4;
	pd19[24] = 2;
	pd19[25] = 1;
	pd19[26] = 0;
	pd19[27] = 0;
	pd19[28] = 0;
	pd19[29] = 0;
	od19->setPassengerFlow(pd19);

	//1-61-62-63-9
	std::vector<int> path191;
	path191.push_back(439);
	path191.push_back(23);
	path191.push_back(24);
	path191.push_back(610);
	od19->addPassengerPath(0, 2, path191);
	passengerGroups.push_back(od19);

	std::vector<std::string> ph19;
	ph19.push_back("439|23|24|610|");
	allPassegnerPath.push_back(ph19);
	ptNo++;
	//*****************************************************************************

	passengerOD* od20 = new passengerOD(ptNo, 13, 9);

	double* pd20 = new double[T];
	pd20[0] = 0;
	pd20[1] = 0;
	pd20[2] = 1;
	pd20[3] = 1;
	pd20[4] = 1;
	pd20[5] = 2;
	pd20[6] = 2;
	pd20[7] = 4;
	pd20[8] = 4;
	pd20[9] = 4;
	pd20[10] = 4;
	pd20[11] = 4;
	pd20[12] = 8;
	pd20[13] = 8;
	pd20[14] = 10;
	pd20[15] = 10;
	pd20[16] = 10;
	pd20[17] = 6;
	pd20[18] = 6;
	pd20[19] = 6;
	pd20[20] = 4;
	pd20[21] = 4;
	pd20[22] = 4;
	pd20[23] = 4;
	pd20[24] = 4;
	pd20[25] = 4;
	pd20[26] = 2;
	pd20[27] = 2;
	pd20[28] = 1;
	pd20[29] = 1;
	od20->setPassengerFlow(pd20);

	//13-65-64-63-9
	std::vector<int> path201;
	path201.push_back(653);
	path201.push_back(31);
	path201.push_back(32);
	path201.push_back(610);
	od20->addPassengerPath(0, 2, path201);
	passengerGroups.push_back(od20);

	std::vector<std::string> ph20;
	ph20.push_back("653|31|32|610|");
	allPassegnerPath.push_back(ph20);
	ptNo++;
	//*****************************************************************************

	passengerOD* od21 = new passengerOD(ptNo, 7, 10);

	double* pd21 = new double[T];
	pd21[0] = 0;
	pd21[1] = 0;
	pd21[2] = 1;
	pd21[3] = 1;
	pd21[4] = 1;
	pd21[5] = 2;
	pd21[6] = 2;
	pd21[7] = 4;
	pd21[8] = 6;
	pd21[9] = 6;
	pd21[10] = 8;
	pd21[11] = 8;
	pd21[12] = 8;
	pd21[13] = 10;
	pd21[14] = 10;
	pd21[15] = 12;
	pd21[16] = 12;
	pd21[17] = 8;
	pd21[18] = 8;
	pd21[19] = 6;
	pd21[20] = 6;
	pd21[21] = 6;
	pd21[22] = 6;
	pd21[23] = 4;
	pd21[24] = 4;
	pd21[25] = 4;
	pd21[26] = 2;
	pd21[27] = 2;
	pd21[28] = 1;
	pd21[29] = 1;
	od21->setPassengerFlow(pd21);

	//7-75-76-70-69-68-10
	std::vector<int> path211;
	path211.push_back(589);
	path211.push_back(45);
	path211.push_back(687);
	path211.push_back(40);
	path211.push_back(41);
	path211.push_back(620);
	od21->addPassengerPath(0, 2, path211);
	passengerGroups.push_back(od21);

	std::vector<std::string> ph21;
	ph21.push_back("589|45|687|40|41|620|");
	allPassegnerPath.push_back(ph21);
	ptNo++;
	//*****************************************************************************

	passengerOD* od22 = new passengerOD(ptNo, 13, 10);

	double* pd22 = new double[T];
	pd22[0] = 0;
	pd22[1] = 0;
	pd22[2] = 1;
	pd22[3] = 1;
	pd22[4] = 1;
	pd22[5] = 2;
	pd22[6] = 2;
	pd22[7] = 2;
	pd22[8] = 2;
	pd22[9] = 2;
	pd22[10] = 4;
	pd22[11] = 4;
	pd22[12] = 4;
	pd22[13] = 6;
	pd22[14] = 6;
	pd22[15] = 6;
	pd22[16] = 6;
	pd22[17] = 3;
	pd22[18] = 3;
	pd22[19] = 3;
	pd22[20] = 2;
	pd22[21] = 2;
	pd22[22] = 2;
	pd22[23] = 1;
	pd22[24] = 1;
	pd22[25] = 1;
	pd22[26] = 0;
	pd22[27] = 0;
	pd22[28] = 0;
	pd22[29] = 0;
	od22->setPassengerFlow(pd22);

	//13-65-64-10
	std::vector<int> path221;
	path221.push_back(653);
	path221.push_back(31);
	path221.push_back(619);
	od22->addPassengerPath(0, 2, path221);
	passengerGroups.push_back(od22);

	std::vector<std::string> ph22;
	ph22.push_back("653|31|619|");
	allPassegnerPath.push_back(ph22);
	ptNo++;
	//*****************************************************************************


	passengerOD* od27 = new passengerOD(ptNo, 16, 17);

	double* pd27 = new double[T];
	pd27[0] = 2;
	pd27[1] = 2;
	pd27[2] = 4;
	pd27[3] = 8;
	pd27[4] = 10;
	pd27[5] = 15;
	pd27[6] = 20;
	pd27[7] = 30;
	pd27[8] = 30;
	pd27[9] = 30;
	pd27[10] = 20;
	pd27[11] = 20;
	pd27[12] = 10;
	pd27[13] = 10;
	pd27[14] = 8;
	pd27[15] = 8;
	pd27[16] = 6;
	pd27[17] = 6;
	pd27[18] = 6;
	pd27[19] = 3;
	pd27[20] = 3;
	pd27[21] = 3;
	pd27[22] = 2;
	pd27[23] = 2;
	pd27[24] = 2;
	pd27[25] = 2;
	pd27[26] = 1;
	pd27[27] = 1;
	pd27[28] = 1;
	pd27[29] = 1;
	od27->setPassengerFlow(pd27);

	//16-82-81-65-66-67-17
	std::vector<int> path271;
	path271.push_back(690);
	path271.push_back(57);
	path271.push_back(659);
	path271.push_back(27);
	path271.push_back(28);
	path271.push_back(704);
	od27->addPassengerPath(0, 2, path271);
	passengerGroups.push_back(od27);

	std::vector<std::string> ph27;
	ph27.push_back("690|57|659|27|28|704|");
	allPassegnerPath.push_back(ph27);
	ptNo++;

	//*****************************************************************************

	
}

void JiaxingData::setNetwork(TransitNetworkLoading* tnl, bool considerBikeSharing) {
	tnl->outFile.open("bicycle.csv");
	
	tnl->addNode(0, 0);
	tnl->addNode(1, 0);
	tnl->addNode(2, 0);
	tnl->addNode(3, 0);
	tnl->addNode(4, 0);
	tnl->addNode(5, 0);
	tnl->addNode(6, 0);
	tnl->addNode(7, 0);
	tnl->addNode(8, 0);
	tnl->addNode(9, 0);
	tnl->addNode(10, 0);
	tnl->addNode(11, 0);
	tnl->addNode(12, 0);
	tnl->addNode(13, 0);
	tnl->addNode(14, 0);
	tnl->addNode(15, 0);
	tnl->addNode(16, 0);
	tnl->addNode(17, 0);
	tnl->addNode(18, 0);

	if (considerBikeSharing) {
		tnl->dockCIni.push_back(20);
		tnl->dockCIni.push_back(20);
		tnl->dockCIni.push_back(50);
		tnl->dockCIni.push_back(80);
		tnl->dockCIni.push_back(20);
		tnl->dockCIni.push_back(50);
		tnl->dockCIni.push_back(10);
		tnl->dockCIni.push_back(25);
		tnl->dockCIni.push_back(200);
		tnl->dockCIni.push_back(30);
		tnl->dockCIni.push_back(35);
		tnl->dockCIni.push_back(20);
		tnl->dockCIni.push_back(40);
		tnl->dockCIni.push_back(10);
		tnl->dockCIni.push_back(150);
		tnl->dockCIni.push_back(10);
		tnl->dockCIni.push_back(80);
		tnl->dockCIni.push_back(20);
		tnl->dockCIni.push_back(0);
	}
	else {
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
		tnl->dockCIni.push_back(0);
	}


	

	tnl->addNode(19, 1, tnl->dockCIni[0]);
	tnl->addNode(20, 1, tnl->dockCIni[1]);
	tnl->addNode(21, 1, tnl->dockCIni[2]);
	tnl->addNode(22, 1, tnl->dockCIni[3]);
	tnl->addNode(23, 1, tnl->dockCIni[4]);
	tnl->addNode(24, 1, tnl->dockCIni[5]);
	tnl->addNode(25, 1, tnl->dockCIni[6]);
	tnl->addNode(26, 1, tnl->dockCIni[7]);
	tnl->addNode(27, 1, tnl->dockCIni[8]);
	tnl->addNode(28, 1, tnl->dockCIni[9]);
	tnl->addNode(29, 1, tnl->dockCIni[10]);
	tnl->addNode(30, 1, tnl->dockCIni[11]);
	tnl->addNode(31, 1, tnl->dockCIni[12]);
	tnl->addNode(32, 1, tnl->dockCIni[13]);
	tnl->addNode(33, 1, tnl->dockCIni[14]);
	tnl->addNode(34, 1, tnl->dockCIni[15]);
	tnl->addNode(35, 1, tnl->dockCIni[16]);
	tnl->addNode(36, 1, tnl->dockCIni[17]);
	tnl->addNode(37, 1, tnl->dockCIni[18]);


	tnl->addNode(38, 3);
	tnl->addNode(39, 3);
	tnl->addNode(40, 3);
	tnl->addNode(41, 3);
	tnl->addNode(42, 3);
	tnl->addNode(43, 3);
	tnl->addNode(44, 3);
	tnl->addNode(45, 3);
	tnl->addNode(46, 2);
	tnl->addNode(47, 2);
	tnl->addNode(48, 2);
	tnl->addNode(49, 2);
	tnl->addNode(50, 2);
	tnl->addNode(51, 2);
	tnl->addNode(52, 2);
	tnl->addNode(53, 2);
	tnl->addNode(54, 2);
	tnl->addNode(55, 2);
	tnl->addNode(56, 2);
	tnl->addNode(57, 2);
	tnl->addNode(58, 2);
	tnl->addNode(59, 2);
	tnl->addNode(60, 2);
	tnl->addNode(61, 2);
	tnl->addNode(62, 2);
	tnl->addNode(63, 2);
	tnl->addNode(64, 2);
	tnl->addNode(65, 2);
	tnl->addNode(66, 2);
	tnl->addNode(67, 2);
	tnl->addNode(68, 2);
	tnl->addNode(69, 2);
	tnl->addNode(70, 2);
	tnl->addNode(71, 2);
	tnl->addNode(72, 2);
	tnl->addNode(73, 2);
	tnl->addNode(74, 2);
	tnl->addNode(75, 2);
	tnl->addNode(76, 2);
	tnl->addNode(77, 2);
	tnl->addNode(78, 2);
	tnl->addNode(79, 2);
	tnl->addNode(80, 2);
	tnl->addNode(81, 2);
	tnl->addNode(82, 2);
	tnl->addNode(83, 2);

	tnl->addLink(0, 2, 1800, 46, 47);
	tnl->addLink(1, 2, 1700, 47, 48);
	tnl->addLink(2, 2, 1500, 48, 49);
	tnl->addLink(3, 2, 1500, 49, 48);
	tnl->addLink(4, 2, 1700, 48, 47);
	tnl->addLink(5, 2, 1800, 47, 46);
	tnl->addLink(6, 2, 1800, 50, 51);
	tnl->addLink(7, 2, 1500, 51, 52);
	tnl->addLink(8, 2, 700, 52, 53);
	tnl->addLink(9, 2, 700, 53, 52);
	tnl->addLink(10, 2, 1500, 52, 51);
	tnl->addLink(11, 2, 1800, 51, 50);
	tnl->addLink(12, 2, 1700, 54, 55);
	tnl->addLink(13, 2, 1500, 55, 56);
	tnl->addLink(14, 2, 700, 56, 57);
	tnl->addLink(15, 2, 900, 57, 58);
	tnl->addLink(16, 2, 800, 58, 59);
	tnl->addLink(17, 2, 800, 59, 58);
	tnl->addLink(18, 2, 900, 58, 57);
	tnl->addLink(19, 2, 700, 57, 56);
	tnl->addLink(20, 2, 1500, 56, 55);
	tnl->addLink(21, 2, 1700, 55, 54);
	tnl->addLink(22, 2, 1800, 60, 61);
	tnl->addLink(23, 2, 1500, 61, 62);
	tnl->addLink(24, 2, 750, 62, 63);
	tnl->addLink(25, 2, 2100, 63, 64);
	tnl->addLink(26, 2, 2200, 64, 65);
	tnl->addLink(27, 2, 2800, 65, 66);
	tnl->addLink(28, 2, 1800, 66, 67);
	tnl->addLink(29, 2, 1800, 67, 66);
	tnl->addLink(30, 2, 2800, 66, 65);
	tnl->addLink(31, 2, 2200, 65, 64);
	tnl->addLink(32, 2, 2100, 64, 63);
	tnl->addLink(33, 2, 750, 63, 62);
	tnl->addLink(34, 2, 1500, 62, 61);
	tnl->addLink(35, 2, 1800, 61, 60);
	tnl->addLink(36, 2, 750, 68, 69);
	tnl->addLink(37, 2, 750, 69, 70);
	tnl->addLink(38, 2, 9400, 70, 71);
	tnl->addLink(39, 2, 9400, 71, 70);
	tnl->addLink(40, 2, 750, 70, 69);
	tnl->addLink(41, 2, 750, 69, 68);
	tnl->addLink(42, 2, 800, 72, 73);
	tnl->addLink(43, 2, 1000, 73, 74);
	tnl->addLink(44, 2, 1300, 74, 75);
	tnl->addLink(45, 2, 800, 75, 76);
	tnl->addLink(46, 2, 800, 76, 75);
	tnl->addLink(47, 2, 1300, 75, 74);
	tnl->addLink(48, 2, 1000, 74, 73);
	tnl->addLink(49, 2, 800, 73, 72);
	tnl->addLink(50, 2, 800, 77, 78);
	tnl->addLink(51, 2, 1100, 78, 79);
	tnl->addLink(52, 2, 1200, 79, 80);
	tnl->addLink(53, 2, 1500, 80, 81);
	tnl->addLink(54, 2, 950, 81, 82);
	tnl->addLink(55, 2, 6700, 82, 83);
	tnl->addLink(56, 2, 6700, 83, 82);
	tnl->addLink(57, 2, 950, 82, 81);
	tnl->addLink(58, 2, 1500, 81, 80);
	tnl->addLink(59, 2, 1200, 80, 79);
	tnl->addLink(60, 2, 1100, 79, 78);
	tnl->addLink(61, 2, 800, 78, 77);
	tnl->addLink(62, 3, 700, 38, 39);
	tnl->addLink(63, 3, 900, 39, 40);
	tnl->addLink(64, 3, 1100, 40, 41);
	tnl->addLink(65, 3, 1200, 41, 42);
	tnl->addLink(66, 3, 1500, 42, 43);
	tnl->addLink(67, 3, 950, 43, 44);
	tnl->addLink(68, 3, 6700, 44, 45);
	tnl->addLink(69, 3, 6700, 45, 44);
	tnl->addLink(70, 3, 950, 44, 43);
	tnl->addLink(71, 3, 1500, 43, 42);
	tnl->addLink(72, 3, 1200, 42, 41);
	tnl->addLink(73, 3, 1100, 41, 40);
	tnl->addLink(74, 3, 900, 40, 39);
	tnl->addLink(75, 3, 700, 39, 38);
	tnl->addLink(76, 1, 1800, 19, 20);
	tnl->addLink(77, 1, 3300, 19, 21);
	tnl->addLink(78, 1, 4000, 19, 22);
	tnl->addLink(79, 1, 5700, 19, 23);
	tnl->addLink(80, 1, 4900, 19, 24);
	tnl->addLink(81, 1, 6000, 19, 25);
	tnl->addLink(82, 1, 7300, 19, 26);
	tnl->addLink(83, 1, 3500, 19, 27);
	tnl->addLink(84, 1, 4050, 19, 28);
	tnl->addLink(85, 1, 6150, 19, 29);
	tnl->addLink(86, 1, 6900, 19, 30);
	tnl->addLink(87, 1, 5000, 19, 31);
	tnl->addLink(88, 1, 8400, 19, 32);
	tnl->addLink(89, 1, 11200, 19, 33);
	tnl->addLink(90, 1, 7650, 19, 34);
	tnl->addLink(91, 1, 9350, 19, 35);
	tnl->addLink(92, 1, 13000, 19, 36);
	tnl->addLink(93, 1, 16050, 19, 37);
	tnl->addLink(94, 1, 1500, 20, 21);
	tnl->addLink(95, 1, 2200, 20, 22);
	tnl->addLink(96, 1, 3900, 20, 23);
	tnl->addLink(97, 1, 3100, 20, 24);
	tnl->addLink(98, 1, 4200, 20, 25);
	tnl->addLink(99, 1, 5500, 20, 26);
	tnl->addLink(100, 1, 1700, 20, 27);
	tnl->addLink(101, 1, 2250, 20, 28);
	tnl->addLink(102, 1, 4350, 20, 29);
	tnl->addLink(103, 1, 5100, 20, 30);
	tnl->addLink(104, 1, 3200, 20, 31);
	tnl->addLink(105, 1, 6600, 20, 32);
	tnl->addLink(106, 1, 9400, 20, 33);
	tnl->addLink(107, 1, 5850, 20, 34);
	tnl->addLink(108, 1, 7550, 20, 35);
	tnl->addLink(109, 1, 11200, 20, 36);
	tnl->addLink(110, 1, 14250, 20, 37);
	tnl->addLink(111, 1, 700, 21, 22);
	tnl->addLink(112, 1, 2400, 21, 23);
	tnl->addLink(113, 1, 1600, 21, 24);
	tnl->addLink(114, 1, 2700, 21, 25);
	tnl->addLink(115, 1, 4000, 21, 26);
	tnl->addLink(116, 1, 3200, 21, 27);
	tnl->addLink(117, 1, 750, 21, 28);
	tnl->addLink(118, 1, 2850, 21, 29);
	tnl->addLink(119, 1, 3600, 21, 30);
	tnl->addLink(120, 1, 4700, 21, 31);
	tnl->addLink(121, 1, 5100, 21, 32);
	tnl->addLink(122, 1, 7900, 21, 33);
	tnl->addLink(123, 1, 4350, 21, 34);
	tnl->addLink(124, 1, 6050, 21, 35);
	tnl->addLink(125, 1, 9700, 21, 36);
	tnl->addLink(126, 1, 12750, 21, 37);
	tnl->addLink(127, 1, 1700, 22, 23);
	tnl->addLink(128, 1, 900, 22, 24);
	tnl->addLink(129, 1, 2000, 22, 25);
	tnl->addLink(130, 1, 3300, 22, 26);
	tnl->addLink(131, 1, 3900, 22, 27);
	tnl->addLink(132, 1, 1450, 22, 28);
	tnl->addLink(133, 1, 3550, 22, 29);
	tnl->addLink(134, 1, 3200, 22, 30);
	tnl->addLink(135, 1, 5400, 22, 31);
	tnl->addLink(136, 1, 4700, 22, 32);
	tnl->addLink(137, 1, 7500, 22, 33);
	tnl->addLink(138, 1, 3950, 22, 34);
	tnl->addLink(139, 1, 5650, 22, 35);
	tnl->addLink(140, 1, 9300, 22, 36);
	tnl->addLink(141, 1, 12350, 22, 37);
	tnl->addLink(142, 1, 800, 23, 24);
	tnl->addLink(143, 1, 1000, 23, 25);
	tnl->addLink(144, 1, 2300, 23, 26);
	tnl->addLink(145, 1, 5600, 23, 27);
	tnl->addLink(146, 1, 3150, 23, 28);
	tnl->addLink(147, 1, 2950, 23, 29);
	tnl->addLink(148, 1, 2200, 23, 30);
	tnl->addLink(149, 1, 7100, 23, 31);
	tnl->addLink(150, 1, 3700, 23, 32);
	tnl->addLink(151, 1, 6500, 23, 33);
	tnl->addLink(152, 1, 2950, 23, 34);
	tnl->addLink(153, 1, 4650, 23, 35);
	tnl->addLink(154, 1, 8300, 23, 36);
	tnl->addLink(155, 1, 11350, 23, 37);
	tnl->addLink(156, 1, 1100, 24, 25);
	tnl->addLink(157, 1, 2400, 24, 26);
	tnl->addLink(158, 1, 4800, 24, 27);
	tnl->addLink(159, 1, 2350, 24, 28);
	tnl->addLink(160, 1, 3050, 24, 29);
	tnl->addLink(161, 1, 2300, 24, 30);
	tnl->addLink(162, 1, 6300, 24, 31);
	tnl->addLink(163, 1, 3800, 24, 32);
	tnl->addLink(164, 1, 6600, 24, 33);
	tnl->addLink(165, 1, 3050, 24, 34);
	tnl->addLink(166, 1, 4750, 24, 35);
	tnl->addLink(167, 1, 8400, 24, 36);
	tnl->addLink(168, 1, 11450, 24, 37);
	tnl->addLink(169, 1, 1300, 25, 26);
	tnl->addLink(170, 1, 5900, 25, 27);
	tnl->addLink(171, 1, 3450, 25, 28);
	tnl->addLink(172, 1, 1950, 25, 29);
	tnl->addLink(173, 1, 1200, 25, 30);
	tnl->addLink(174, 1, 7400, 25, 31);
	tnl->addLink(175, 1, 2700, 25, 32);
	tnl->addLink(176, 1, 5500, 25, 33);
	tnl->addLink(177, 1, 1950, 25, 34);
	tnl->addLink(178, 1, 3650, 25, 35);
	tnl->addLink(179, 1, 7300, 25, 36);
	tnl->addLink(180, 1, 10350, 25, 37);
	tnl->addLink(181, 1, 7200, 26, 27);
	tnl->addLink(182, 1, 4750, 26, 28);
	tnl->addLink(183, 1, 2300, 26, 29);
	tnl->addLink(184, 1, 1550, 26, 30);
	tnl->addLink(185, 1, 8700, 26, 31);
	tnl->addLink(186, 1, 3050, 26, 32);
	tnl->addLink(187, 1, 5850, 26, 33);
	tnl->addLink(188, 1, 800, 26, 34);
	tnl->addLink(189, 1, 4000, 26, 35);
	tnl->addLink(190, 1, 7650, 26, 36);
	tnl->addLink(191, 1, 10200, 26, 37);
	tnl->addLink(192, 1, 3950, 27, 28);
	tnl->addLink(193, 1, 6050, 27, 29);
	tnl->addLink(194, 1, 6800, 27, 30);
	tnl->addLink(195, 1, 1500, 27, 31);
	tnl->addLink(196, 1, 8300, 27, 32);
	tnl->addLink(197, 1, 11100, 27, 33);
	tnl->addLink(198, 1, 7550, 27, 34);
	tnl->addLink(199, 1, 9250, 27, 35);
	tnl->addLink(200, 1, 12900, 27, 36);
	tnl->addLink(201, 1, 15950, 27, 37);
	tnl->addLink(202, 1, 2100, 28, 29);
	tnl->addLink(203, 1, 2850, 28, 30);
	tnl->addLink(204, 1, 5450, 28, 31);
	tnl->addLink(205, 1, 4300, 28, 32);
	tnl->addLink(206, 1, 7100, 28, 33);
	tnl->addLink(207, 1, 3600, 28, 34);
	tnl->addLink(208, 1, 5250, 28, 35);
	tnl->addLink(209, 1, 8900, 28, 36);
	tnl->addLink(210, 1, 11950, 28, 37);
	tnl->addLink(211, 1, 750, 29, 30);
	tnl->addLink(212, 1, 7550, 29, 31);
	tnl->addLink(213, 1, 2200, 29, 32);
	tnl->addLink(214, 1, 5000, 29, 33);
	tnl->addLink(215, 1, 1500, 29, 34);
	tnl->addLink(216, 1, 3150, 29, 35);
	tnl->addLink(217, 1, 6800, 29, 36);
	tnl->addLink(218, 1, 9850, 29, 37);
	tnl->addLink(219, 1, 8300, 30, 31);
	tnl->addLink(220, 1, 1500, 30, 32);
	tnl->addLink(221, 1, 4300, 30, 33);
	tnl->addLink(222, 1, 750, 30, 34);
	tnl->addLink(223, 1, 2450, 30, 35);
	tnl->addLink(224, 1, 6100, 30, 36);
	tnl->addLink(225, 1, 9150, 30, 37);
	tnl->addLink(226, 1, 9800, 31, 32);
	tnl->addLink(227, 1, 12600, 31, 33);
	tnl->addLink(228, 1, 9050, 31, 34);
	tnl->addLink(229, 1, 10750, 31, 35);
	tnl->addLink(230, 1, 14400, 31, 36);
	tnl->addLink(231, 1, 17450, 31, 37);
	tnl->addLink(232, 1, 2800, 32, 33);
	tnl->addLink(233, 1, 2250, 32, 34);
	tnl->addLink(234, 1, 950, 32, 35);
	tnl->addLink(235, 1, 4600, 32, 36);
	tnl->addLink(236, 1, 7650, 32, 37);
	tnl->addLink(237, 1, 5050, 33, 34);
	tnl->addLink(238, 1, 3750, 33, 35);
	tnl->addLink(239, 1, 1800, 33, 36);
	tnl->addLink(240, 1, 10450, 33, 37);
	tnl->addLink(241, 1, 3200, 34, 35);
	tnl->addLink(242, 1, 6850, 34, 36);
	tnl->addLink(243, 1, 9400, 34, 37);
	tnl->addLink(244, 1, 5550, 35, 36);
	tnl->addLink(245, 1, 6700, 35, 37);
	tnl->addLink(246, 1, 12250, 36, 37);
	tnl->addLink(247, 1, 1800, 20, 19);
	tnl->addLink(248, 1, 3300, 21, 19);
	tnl->addLink(249, 1, 4000, 22, 19);
	tnl->addLink(250, 1, 5700, 23, 19);
	tnl->addLink(251, 1, 4900, 24, 19);
	tnl->addLink(252, 1, 6000, 25, 19);
	tnl->addLink(253, 1, 7300, 26, 19);
	tnl->addLink(254, 1, 3500, 27, 19);
	tnl->addLink(255, 1, 4050, 28, 19);
	tnl->addLink(256, 1, 6150, 29, 19);
	tnl->addLink(257, 1, 6900, 30, 19);
	tnl->addLink(258, 1, 5000, 31, 19);
	tnl->addLink(259, 1, 8400, 32, 19);
	tnl->addLink(260, 1, 11200, 33, 19);
	tnl->addLink(261, 1, 7650, 34, 19);
	tnl->addLink(262, 1, 9350, 35, 19);
	tnl->addLink(263, 1, 13000, 36, 19);
	tnl->addLink(264, 1, 16050, 37, 19);
	tnl->addLink(265, 1, 1500, 21, 20);
	tnl->addLink(266, 1, 2200, 22, 20);
	tnl->addLink(267, 1, 3900, 23, 20);
	tnl->addLink(268, 1, 3100, 24, 20);
	tnl->addLink(269, 1, 4200, 25, 20);
	tnl->addLink(270, 1, 5500, 26, 20);
	tnl->addLink(271, 1, 1700, 27, 20);
	tnl->addLink(272, 1, 2250, 28, 20);
	tnl->addLink(273, 1, 4350, 29, 20);
	tnl->addLink(274, 1, 5100, 30, 20);
	tnl->addLink(275, 1, 3200, 31, 20);
	tnl->addLink(276, 1, 6600, 32, 20);
	tnl->addLink(277, 1, 9400, 33, 20);
	tnl->addLink(278, 1, 5850, 34, 20);
	tnl->addLink(279, 1, 7550, 35, 20);
	tnl->addLink(280, 1, 11200, 36, 20);
	tnl->addLink(281, 1, 14250, 37, 20);
	tnl->addLink(282, 1, 700, 22, 21);
	tnl->addLink(283, 1, 2400, 23, 21);
	tnl->addLink(284, 1, 1600, 24, 21);
	tnl->addLink(285, 1, 2700, 25, 21);
	tnl->addLink(286, 1, 4000, 26, 21);
	tnl->addLink(287, 1, 3200, 27, 21);
	tnl->addLink(288, 1, 750, 28, 21);
	tnl->addLink(289, 1, 2850, 29, 21);
	tnl->addLink(290, 1, 3600, 30, 21);
	tnl->addLink(291, 1, 4700, 31, 21);
	tnl->addLink(292, 1, 5100, 32, 21);
	tnl->addLink(293, 1, 7900, 33, 21);
	tnl->addLink(294, 1, 4350, 34, 21);
	tnl->addLink(295, 1, 6050, 35, 21);
	tnl->addLink(296, 1, 9700, 36, 21);
	tnl->addLink(297, 1, 12750, 37, 21);
	tnl->addLink(298, 1, 1700, 23, 22);
	tnl->addLink(299, 1, 900, 24, 22);
	tnl->addLink(300, 1, 2000, 25, 22);
	tnl->addLink(301, 1, 3300, 26, 22);
	tnl->addLink(302, 1, 3900, 27, 22);
	tnl->addLink(303, 1, 1450, 28, 22);
	tnl->addLink(304, 1, 3550, 29, 22);
	tnl->addLink(305, 1, 3200, 30, 22);
	tnl->addLink(306, 1, 5400, 31, 22);
	tnl->addLink(307, 1, 4700, 32, 22);
	tnl->addLink(308, 1, 7500, 33, 22);
	tnl->addLink(309, 1, 3950, 34, 22);
	tnl->addLink(310, 1, 5650, 35, 22);
	tnl->addLink(311, 1, 9300, 36, 22);
	tnl->addLink(312, 1, 12350, 37, 22);
	tnl->addLink(313, 1, 800, 24, 23);
	tnl->addLink(314, 1, 1000, 25, 23);
	tnl->addLink(315, 1, 2300, 26, 23);
	tnl->addLink(316, 1, 5600, 27, 23);
	tnl->addLink(317, 1, 3150, 28, 23);
	tnl->addLink(318, 1, 2950, 29, 23);
	tnl->addLink(319, 1, 2200, 30, 23);
	tnl->addLink(320, 1, 7100, 31, 23);
	tnl->addLink(321, 1, 3700, 32, 23);
	tnl->addLink(322, 1, 6500, 33, 23);
	tnl->addLink(323, 1, 2950, 34, 23);
	tnl->addLink(324, 1, 4650, 35, 23);
	tnl->addLink(325, 1, 8300, 36, 23);
	tnl->addLink(326, 1, 11350, 37, 23);
	tnl->addLink(327, 1, 1100, 25, 24);
	tnl->addLink(328, 1, 2400, 26, 24);
	tnl->addLink(329, 1, 4800, 27, 24);
	tnl->addLink(330, 1, 2350, 28, 24);
	tnl->addLink(331, 1, 3050, 29, 24);
	tnl->addLink(332, 1, 2300, 30, 24);
	tnl->addLink(333, 1, 6300, 31, 24);
	tnl->addLink(334, 1, 3800, 32, 24);
	tnl->addLink(335, 1, 6600, 33, 24);
	tnl->addLink(336, 1, 3050, 34, 24);
	tnl->addLink(337, 1, 4750, 35, 24);
	tnl->addLink(338, 1, 8400, 36, 24);
	tnl->addLink(339, 1, 11450, 37, 24);
	tnl->addLink(340, 1, 1300, 26, 25);
	tnl->addLink(341, 1, 5900, 27, 25);
	tnl->addLink(342, 1, 3450, 28, 25);
	tnl->addLink(343, 1, 1950, 29, 25);
	tnl->addLink(344, 1, 1200, 30, 25);
	tnl->addLink(345, 1, 7400, 31, 25);
	tnl->addLink(346, 1, 2700, 32, 25);
	tnl->addLink(347, 1, 5500, 33, 25);
	tnl->addLink(348, 1, 1950, 34, 25);
	tnl->addLink(349, 1, 3650, 35, 25);
	tnl->addLink(350, 1, 7300, 36, 25);
	tnl->addLink(351, 1, 10350, 37, 25);
	tnl->addLink(352, 1, 7200, 27, 26);
	tnl->addLink(353, 1, 4750, 28, 26);
	tnl->addLink(354, 1, 2300, 29, 26);
	tnl->addLink(355, 1, 1550, 30, 26);
	tnl->addLink(356, 1, 8700, 31, 26);
	tnl->addLink(357, 1, 3050, 32, 26);
	tnl->addLink(358, 1, 5850, 33, 26);
	tnl->addLink(359, 1, 800, 34, 26);
	tnl->addLink(360, 1, 4000, 35, 26);
	tnl->addLink(361, 1, 7650, 36, 26);
	tnl->addLink(362, 1, 10200, 37, 26);
	tnl->addLink(363, 1, 3950, 28, 27);
	tnl->addLink(364, 1, 6050, 29, 27);
	tnl->addLink(365, 1, 6800, 30, 27);
	tnl->addLink(366, 1, 1500, 31, 27);
	tnl->addLink(367, 1, 8300, 32, 27);
	tnl->addLink(368, 1, 11100, 33, 27);
	tnl->addLink(369, 1, 7550, 34, 27);
	tnl->addLink(370, 1, 9250, 35, 27);
	tnl->addLink(371, 1, 12900, 36, 27);
	tnl->addLink(372, 1, 15950, 37, 27);
	tnl->addLink(373, 1, 2100, 29, 28);
	tnl->addLink(374, 1, 2850, 30, 28);
	tnl->addLink(375, 1, 5450, 31, 28);
	tnl->addLink(376, 1, 4300, 32, 28);
	tnl->addLink(377, 1, 7100, 33, 28);
	tnl->addLink(378, 1, 3600, 34, 28);
	tnl->addLink(379, 1, 5250, 35, 28);
	tnl->addLink(380, 1, 8900, 36, 28);
	tnl->addLink(381, 1, 11950, 37, 28);
	tnl->addLink(382, 1, 750, 30, 29);
	tnl->addLink(383, 1, 7550, 31, 29);
	tnl->addLink(384, 1, 2200, 32, 29);
	tnl->addLink(385, 1, 5000, 33, 29);
	tnl->addLink(386, 1, 1500, 34, 29);
	tnl->addLink(387, 1, 3150, 35, 29);
	tnl->addLink(388, 1, 6800, 36, 29);
	tnl->addLink(389, 1, 9850, 37, 29);
	tnl->addLink(390, 1, 8300, 31, 30);
	tnl->addLink(391, 1, 1500, 32, 30);
	tnl->addLink(392, 1, 4300, 33, 30);
	tnl->addLink(393, 1, 750, 34, 30);
	tnl->addLink(394, 1, 2450, 35, 30);
	tnl->addLink(395, 1, 6100, 36, 30);
	tnl->addLink(396, 1, 9150, 37, 30);
	tnl->addLink(397, 1, 9800, 32, 31);
	tnl->addLink(398, 1, 12600, 33, 31);
	tnl->addLink(399, 1, 9050, 34, 31);
	tnl->addLink(400, 1, 10750, 35, 31);
	tnl->addLink(401, 1, 14400, 36, 31);
	tnl->addLink(402, 1, 17450, 37, 31);
	tnl->addLink(403, 1, 2800, 33, 32);
	tnl->addLink(404, 1, 2250, 34, 32);
	tnl->addLink(405, 1, 950, 35, 32);
	tnl->addLink(406, 1, 4600, 36, 32);
	tnl->addLink(407, 1, 7650, 37, 32);
	tnl->addLink(408, 1, 5050, 34, 33);
	tnl->addLink(409, 1, 3750, 35, 33);
	tnl->addLink(410, 1, 1800, 36, 33);
	tnl->addLink(411, 1, 10450, 37, 33);
	tnl->addLink(412, 1, 3200, 35, 34);
	tnl->addLink(413, 1, 6850, 36, 34);
	tnl->addLink(414, 1, 9400, 37, 34);
	tnl->addLink(415, 1, 5550, 36, 35);
	tnl->addLink(416, 1, 6700, 37, 35);
	tnl->addLink(417, 1, 12250, 37, 36);
	tnl->addLink(418, 0, 200, 0, 19);
	tnl->addLink(419, 0, 200, 0, 60);
	tnl->addLink(420, 0, 200, 0, 50);
	tnl->addLink(421, 0, 200, 0, 46);
	tnl->addLink(422, 0, 200, 19, 60);
	tnl->addLink(423, 0, 200, 19, 50);
	tnl->addLink(424, 0, 200, 19, 46);
	tnl->addLink(425, 0, 200, 60, 50);
	tnl->addLink(426, 0, 200, 60, 46);
	tnl->addLink(427, 0, 200, 50, 46);
	tnl->addLink(428, 0, 200, 19, 0);
	tnl->addLink(429, 0, 200, 60, 0);
	tnl->addLink(430, 0, 200, 50, 0);
	tnl->addLink(431, 0, 200, 46, 0);
	tnl->addLink(432, 0, 200, 60, 19);
	tnl->addLink(433, 0, 200, 50, 19);
	tnl->addLink(434, 0, 200, 46, 19);
	tnl->addLink(435, 0, 200, 50, 60);
	tnl->addLink(436, 0, 200, 46, 60);
	tnl->addLink(437, 0, 200, 46, 50);
	tnl->addLink(438, 0, 200, 1, 20);
	tnl->addLink(439, 0, 200, 1, 61);
	tnl->addLink(440, 0, 200, 1, 55);
	tnl->addLink(441, 0, 200, 1, 51);
	tnl->addLink(442, 0, 200, 1, 47);
	tnl->addLink(443, 0, 200, 20, 61);
	tnl->addLink(444, 0, 200, 20, 55);
	tnl->addLink(445, 0, 200, 20, 51);
	tnl->addLink(446, 0, 200, 20, 47);
	tnl->addLink(447, 0, 200, 61, 55);
	tnl->addLink(448, 0, 200, 61, 51);
	tnl->addLink(449, 0, 200, 61, 47);
	tnl->addLink(450, 0, 200, 55, 51);
	tnl->addLink(451, 0, 200, 55, 47);
	tnl->addLink(452, 0, 200, 51, 47);
	tnl->addLink(453, 0, 200, 20, 1);
	tnl->addLink(454, 0, 200, 61, 1);
	tnl->addLink(455, 0, 200, 55, 1);
	tnl->addLink(456, 0, 200, 51, 1);
	tnl->addLink(457, 0, 200, 47, 1);
	tnl->addLink(458, 0, 200, 61, 20);
	tnl->addLink(459, 0, 200, 55, 20);
	tnl->addLink(460, 0, 200, 51, 20);
	tnl->addLink(461, 0, 200, 47, 20);
	tnl->addLink(462, 0, 200, 55, 61);
	tnl->addLink(463, 0, 200, 51, 61);
	tnl->addLink(464, 0, 200, 47, 61);
	tnl->addLink(465, 0, 200, 51, 55);
	tnl->addLink(466, 0, 200, 47, 55);
	tnl->addLink(467, 0, 200, 47, 51);
	tnl->addLink(468, 0, 200, 2, 21);
	tnl->addLink(469, 0, 200, 2, 38);
	tnl->addLink(470, 0, 200, 2, 62);
	tnl->addLink(471, 0, 200, 2, 56);
	tnl->addLink(472, 0, 200, 2, 52);
	tnl->addLink(473, 0, 200, 21, 38);
	tnl->addLink(474, 0, 200, 21, 62);
	tnl->addLink(475, 0, 200, 21, 56);
	tnl->addLink(476, 0, 200, 21, 52);
	tnl->addLink(477, 0, 200, 38, 62);
	tnl->addLink(478, 0, 200, 38, 56);
	tnl->addLink(479, 0, 200, 38, 52);
	tnl->addLink(480, 0, 200, 62, 56);
	tnl->addLink(481, 0, 200, 62, 52);
	tnl->addLink(482, 0, 200, 56, 52);
	tnl->addLink(483, 0, 200, 21, 2);
	tnl->addLink(484, 0, 200, 38, 2);
	tnl->addLink(485, 0, 200, 62, 2);
	tnl->addLink(486, 0, 200, 56, 2);
	tnl->addLink(487, 0, 200, 52, 2);
	tnl->addLink(488, 0, 200, 38, 21);
	tnl->addLink(489, 0, 200, 62, 21);
	tnl->addLink(490, 0, 200, 56, 21);
	tnl->addLink(491, 0, 200, 52, 21);
	tnl->addLink(492, 0, 200, 62, 38);
	tnl->addLink(493, 0, 200, 56, 38);
	tnl->addLink(494, 0, 200, 52, 38);
	tnl->addLink(495, 0, 200, 56, 62);
	tnl->addLink(496, 0, 200, 52, 62);
	tnl->addLink(497, 0, 200, 52, 56);
	tnl->addLink(498, 0, 200, 3, 22);
	tnl->addLink(499, 0, 200, 3, 39);
	tnl->addLink(500, 0, 200, 3, 57);
	tnl->addLink(501, 0, 200, 3, 53);
	tnl->addLink(502, 0, 200, 22, 39);
	tnl->addLink(503, 0, 200, 22, 57);
	tnl->addLink(504, 0, 200, 22, 53);
	tnl->addLink(505, 0, 200, 39, 57);
	tnl->addLink(506, 0, 200, 39, 53);
	tnl->addLink(507, 0, 200, 57, 53);
	tnl->addLink(508, 0, 200, 22, 3);
	tnl->addLink(509, 0, 200, 39, 3);
	tnl->addLink(510, 0, 200, 57, 3);
	tnl->addLink(511, 0, 200, 53, 3);
	tnl->addLink(512, 0, 200, 39, 22);
	tnl->addLink(513, 0, 200, 57, 22);
	tnl->addLink(514, 0, 200, 53, 22);
	tnl->addLink(515, 0, 200, 57, 39);
	tnl->addLink(516, 0, 200, 53, 39);
	tnl->addLink(517, 0, 200, 53, 57);
	tnl->addLink(518, 0, 200, 4, 23);
	tnl->addLink(519, 0, 200, 4, 59);
	tnl->addLink(520, 0, 200, 4, 77);
	tnl->addLink(521, 0, 200, 4, 73);
	tnl->addLink(522, 0, 200, 23, 59);
	tnl->addLink(523, 0, 200, 23, 77);
	tnl->addLink(524, 0, 200, 23, 73);
	tnl->addLink(525, 0, 200, 59, 77);
	tnl->addLink(526, 0, 200, 59, 73);
	tnl->addLink(527, 0, 200, 77, 73);
	tnl->addLink(528, 0, 200, 23, 4);
	tnl->addLink(529, 0, 200, 59, 4);
	tnl->addLink(530, 0, 200, 77, 4);
	tnl->addLink(531, 0, 200, 73, 4);
	tnl->addLink(532, 0, 200, 59, 23);
	tnl->addLink(533, 0, 200, 77, 23);
	tnl->addLink(534, 0, 200, 73, 23);
	tnl->addLink(535, 0, 200, 77, 59);
	tnl->addLink(536, 0, 200, 73, 59);
	tnl->addLink(537, 0, 200, 73, 77);
	tnl->addLink(538, 0, 200, 5, 24);
	tnl->addLink(539, 0, 200, 5, 40);
	tnl->addLink(540, 0, 200, 5, 58);
	tnl->addLink(541, 0, 200, 5, 78);
	tnl->addLink(542, 0, 200, 5, 72);
	tnl->addLink(543, 0, 200, 24, 40);
	tnl->addLink(544, 0, 200, 24, 58);
	tnl->addLink(545, 0, 200, 24, 78);
	tnl->addLink(546, 0, 200, 24, 72);
	tnl->addLink(547, 0, 200, 40, 58);
	tnl->addLink(548, 0, 200, 40, 78);
	tnl->addLink(549, 0, 200, 40, 72);
	tnl->addLink(550, 0, 200, 58, 78);
	tnl->addLink(551, 0, 200, 58, 72);
	tnl->addLink(552, 0, 200, 78, 72);
	tnl->addLink(553, 0, 200, 24, 5);
	tnl->addLink(554, 0, 200, 40, 5);
	tnl->addLink(555, 0, 200, 58, 5);
	tnl->addLink(556, 0, 200, 78, 5);
	tnl->addLink(557, 0, 200, 72, 5);
	tnl->addLink(558, 0, 200, 40, 24);
	tnl->addLink(559, 0, 200, 58, 24);
	tnl->addLink(560, 0, 200, 78, 24);
	tnl->addLink(561, 0, 200, 72, 24);
	tnl->addLink(562, 0, 200, 58, 40);
	tnl->addLink(563, 0, 200, 78, 40);
	tnl->addLink(564, 0, 200, 72, 40);
	tnl->addLink(565, 0, 200, 78, 58);
	tnl->addLink(566, 0, 200, 72, 58);
	tnl->addLink(567, 0, 200, 72, 78);
	tnl->addLink(568, 0, 200, 6, 25);
	tnl->addLink(569, 0, 200, 6, 41);
	tnl->addLink(570, 0, 200, 6, 79);
	tnl->addLink(571, 0, 200, 6, 74);
	tnl->addLink(572, 0, 200, 25, 41);
	tnl->addLink(573, 0, 200, 25, 79);
	tnl->addLink(574, 0, 200, 25, 74);
	tnl->addLink(575, 0, 200, 41, 79);
	tnl->addLink(576, 0, 200, 41, 74);
	tnl->addLink(577, 0, 200, 79, 74);
	tnl->addLink(578, 0, 200, 25, 6);
	tnl->addLink(579, 0, 200, 41, 6);
	tnl->addLink(580, 0, 200, 79, 6);
	tnl->addLink(581, 0, 200, 74, 6);
	tnl->addLink(582, 0, 200, 41, 25);
	tnl->addLink(583, 0, 200, 79, 25);
	tnl->addLink(584, 0, 200, 74, 25);
	tnl->addLink(585, 0, 200, 79, 41);
	tnl->addLink(586, 0, 200, 74, 41);
	tnl->addLink(587, 0, 200, 74, 79);
	tnl->addLink(588, 0, 200, 7, 26);
	tnl->addLink(589, 0, 200, 7, 75);
	tnl->addLink(590, 0, 200, 26, 75);
	tnl->addLink(591, 0, 200, 26, 7);
	tnl->addLink(592, 0, 200, 75, 7);
	tnl->addLink(593, 0, 200, 75, 26);
	tnl->addLink(594, 0, 200, 8, 27);
	tnl->addLink(595, 0, 200, 8, 54);
	tnl->addLink(596, 0, 200, 8, 48);
	tnl->addLink(597, 0, 200, 27, 54);
	tnl->addLink(598, 0, 200, 27, 48);
	tnl->addLink(599, 0, 200, 54, 48);
	tnl->addLink(600, 0, 200, 27, 8);
	tnl->addLink(601, 0, 200, 54, 8);
	tnl->addLink(602, 0, 200, 48, 8);
	tnl->addLink(603, 0, 200, 54, 27);
	tnl->addLink(604, 0, 200, 48, 27);
	tnl->addLink(605, 0, 200, 48, 54);
	tnl->addLink(606, 0, 200, 9, 28);
	tnl->addLink(607, 0, 200, 9, 63);
	tnl->addLink(608, 0, 200, 28, 63);
	tnl->addLink(609, 0, 200, 28, 9);
	tnl->addLink(610, 0, 200, 63, 9);
	tnl->addLink(611, 0, 200, 63, 28);
	tnl->addLink(612, 0, 200, 10, 29);
	tnl->addLink(613, 0, 200, 10, 64);
	tnl->addLink(614, 0, 200, 10, 68);
	tnl->addLink(615, 0, 200, 29, 64);
	tnl->addLink(616, 0, 200, 29, 68);
	tnl->addLink(617, 0, 200, 64, 68);
	tnl->addLink(618, 0, 200, 29, 10);
	tnl->addLink(619, 0, 200, 64, 10);
	tnl->addLink(620, 0, 200, 68, 10);
	tnl->addLink(621, 0, 200, 64, 29);
	tnl->addLink(622, 0, 200, 68, 29);
	tnl->addLink(623, 0, 200, 68, 64);
	tnl->addLink(624, 0, 200, 11, 30);
	tnl->addLink(625, 0, 200, 11, 42);
	tnl->addLink(626, 0, 200, 11, 80);
	tnl->addLink(627, 0, 200, 11, 69);
	tnl->addLink(628, 0, 200, 30, 42);
	tnl->addLink(629, 0, 200, 30, 80);
	tnl->addLink(630, 0, 200, 30, 69);
	tnl->addLink(631, 0, 200, 42, 80);
	tnl->addLink(632, 0, 200, 42, 69);
	tnl->addLink(633, 0, 200, 80, 69);
	tnl->addLink(634, 0, 200, 30, 11);
	tnl->addLink(635, 0, 200, 42, 11);
	tnl->addLink(636, 0, 200, 80, 11);
	tnl->addLink(637, 0, 200, 69, 11);
	tnl->addLink(638, 0, 200, 42, 30);
	tnl->addLink(639, 0, 200, 80, 30);
	tnl->addLink(640, 0, 200, 69, 30);
	tnl->addLink(641, 0, 200, 80, 42);
	tnl->addLink(642, 0, 200, 69, 42);
	tnl->addLink(643, 0, 200, 69, 80);
	tnl->addLink(644, 0, 200, 12, 31);
	tnl->addLink(645, 0, 200, 12, 49);
	tnl->addLink(646, 0, 200, 31, 49);
	tnl->addLink(647, 0, 200, 31, 12);
	tnl->addLink(648, 0, 200, 49, 12);
	tnl->addLink(649, 0, 200, 49, 31);
	tnl->addLink(650, 0, 200, 13, 32);
	tnl->addLink(651, 0, 200, 13, 43);
	tnl->addLink(652, 0, 200, 13, 81);
	tnl->addLink(653, 0, 200, 13, 65);
	tnl->addLink(654, 0, 200, 32, 43);
	tnl->addLink(655, 0, 200, 32, 81);
	tnl->addLink(656, 0, 200, 32, 65);
	tnl->addLink(657, 0, 200, 43, 81);
	tnl->addLink(658, 0, 200, 43, 65);
	tnl->addLink(659, 0, 200, 81, 65);
	tnl->addLink(660, 0, 200, 32, 13);
	tnl->addLink(661, 0, 200, 43, 13);
	tnl->addLink(662, 0, 200, 81, 13);
	tnl->addLink(663, 0, 200, 65, 13);
	tnl->addLink(664, 0, 200, 43, 32);
	tnl->addLink(665, 0, 200, 81, 32);
	tnl->addLink(666, 0, 200, 65, 32);
	tnl->addLink(667, 0, 200, 81, 43);
	tnl->addLink(668, 0, 200, 65, 43);
	tnl->addLink(669, 0, 200, 65, 81);
	tnl->addLink(670, 0, 200, 14, 33);
	tnl->addLink(671, 0, 200, 14, 66);
	tnl->addLink(672, 0, 200, 33, 66);
	tnl->addLink(673, 0, 200, 33, 14);
	tnl->addLink(674, 0, 200, 66, 14);
	tnl->addLink(675, 0, 200, 66, 33);
	tnl->addLink(676, 0, 200, 15, 34);
	tnl->addLink(677, 0, 200, 15, 70);
	tnl->addLink(678, 0, 200, 15, 76);
	tnl->addLink(679, 0, 200, 34, 70);
	tnl->addLink(680, 0, 200, 34, 76);
	tnl->addLink(681, 0, 200, 70, 76);
	tnl->addLink(682, 0, 200, 34, 15);
	tnl->addLink(683, 0, 200, 70, 15);
	tnl->addLink(684, 0, 200, 76, 15);
	tnl->addLink(685, 0, 200, 70, 34);
	tnl->addLink(686, 0, 200, 76, 34);
	tnl->addLink(687, 0, 200, 76, 70);
	tnl->addLink(688, 0, 200, 16, 35);
	tnl->addLink(689, 0, 200, 16, 44);
	tnl->addLink(690, 0, 200, 16, 82);
	tnl->addLink(691, 0, 200, 35, 44);
	tnl->addLink(692, 0, 200, 35, 82);
	tnl->addLink(693, 0, 200, 44, 82);
	tnl->addLink(694, 0, 200, 35, 16);
	tnl->addLink(695, 0, 200, 44, 16);
	tnl->addLink(696, 0, 200, 82, 16);
	tnl->addLink(697, 0, 200, 44, 35);
	tnl->addLink(698, 0, 200, 82, 35);
	tnl->addLink(699, 0, 200, 82, 44);
	tnl->addLink(700, 0, 200, 17, 36);
	tnl->addLink(701, 0, 200, 17, 67);
	tnl->addLink(702, 0, 200, 36, 67);
	tnl->addLink(703, 0, 200, 36, 17);
	tnl->addLink(704, 0, 200, 67, 17);
	tnl->addLink(705, 0, 200, 67, 36);
	tnl->addLink(706, 0, 200, 18, 37);
	tnl->addLink(707, 0, 200, 18, 45);
	tnl->addLink(708, 0, 200, 18, 71);
	tnl->addLink(709, 0, 200, 18, 83);
	tnl->addLink(710, 0, 200, 37, 45);
	tnl->addLink(711, 0, 200, 37, 71);
	tnl->addLink(712, 0, 200, 37, 83);
	tnl->addLink(713, 0, 200, 45, 71);
	tnl->addLink(714, 0, 200, 45, 83);
	tnl->addLink(715, 0, 200, 71, 83);
	tnl->addLink(716, 0, 200, 37, 18);
	tnl->addLink(717, 0, 200, 45, 18);
	tnl->addLink(718, 0, 200, 71, 18);
	tnl->addLink(719, 0, 200, 83, 18);
	tnl->addLink(720, 0, 200, 45, 37);
	tnl->addLink(721, 0, 200, 71, 37);
	tnl->addLink(722, 0, 200, 83, 37);
	tnl->addLink(723, 0, 200, 71, 45);
	tnl->addLink(724, 0, 200, 83, 45);
	tnl->addLink(725, 0, 200, 83, 71);

	tnl->sharedBikeNode[0] = 19;
	tnl->sharedBikeNode[1] = 20;
	tnl->sharedBikeNode[2] = 21;
	tnl->sharedBikeNode[3] = 22;
	tnl->sharedBikeNode[4] = 23;
	tnl->sharedBikeNode[5] = 24;
	tnl->sharedBikeNode[6] = 25;
	tnl->sharedBikeNode[7] = 26;
	tnl->sharedBikeNode[8] = 27;
	tnl->sharedBikeNode[9] = 28;
	tnl->sharedBikeNode[10] = 29;
	tnl->sharedBikeNode[11] = 30;
	tnl->sharedBikeNode[12] = 31;
	tnl->sharedBikeNode[13] = 32;
	tnl->sharedBikeNode[14] = 33;
	tnl->sharedBikeNode[15] = 34;
	tnl->sharedBikeNode[16] = 35;
	tnl->sharedBikeNode[17] = 36;
	tnl->sharedBikeNode[18] = 37;

	std::vector<int> busline14a;
	busline14a.push_back(0);
	busline14a.push_back(1);
	busline14a.push_back(2);
	std::map<int, double> b14aTimetable;
	b14aTimetable[0] = 800;
	b14aTimetable[6] = 800;
	b14aTimetable[12] = 750;
	b14aTimetable[18] = 650;
	b14aTimetable[24] = 500;
	b14aTimetable[30] = 650;
	b14aTimetable[36] = 750;
	b14aTimetable[42] = 800;
	b14aTimetable[46] = 800;
	b14aTimetable[60] = 800;
	tnl->setVehTimetable(1, 1, 1000, 32, busline14a, b14aTimetable);

	std::vector<int> busline14b;
	busline14b.push_back(3);
	busline14b.push_back(4);
	busline14b.push_back(5);
	std::map<int, double> b14bTimetable;
	b14bTimetable[0] = 800;
	b14bTimetable[6] = 800;
	b14bTimetable[12] = 750;
	b14bTimetable[18] = 650;
	b14bTimetable[24] = 500;
	b14bTimetable[30] = 650;
	b14bTimetable[36] = 750;
	b14bTimetable[42] = 800;
	b14bTimetable[46] = 800;
	b14bTimetable[60] = 800;
	tnl->setVehTimetable(2, 1, 1000, 32, busline14b, b14bTimetable);

	std::vector<int> busline23a;
	busline23a.push_back(6);
	busline23a.push_back(7);
	busline23a.push_back(8);
	std::map<int, double> b23aTimetable;
	b23aTimetable[0] = 800;
	b23aTimetable[10] = 800;
	b23aTimetable[20] = 700;
	b23aTimetable[30] = 600;
	b23aTimetable[40] = 650;
	b23aTimetable[50] = 700;
	b23aTimetable[60] = 800;
	tnl->setVehTimetable(3, 1, 1000, 32, busline23a, b23aTimetable);

	std::vector<int> busline23b;
	busline23b.push_back(9);
	busline23b.push_back(10);
	busline23b.push_back(11);
	std::map<int, double> b23bTimetable;
	b23bTimetable[0] = 800;
	b23bTimetable[10] = 800;
	b23bTimetable[20] = 700;
	b23bTimetable[30] = 600;
	b23bTimetable[40] = 650;
	b23bTimetable[50] = 700;
	b23bTimetable[60] = 800;
	tnl->setVehTimetable(4, 1, 1000, 32, busline23b, b23bTimetable);

	std::vector<int> busline1a;
	busline1a.push_back(12);
	busline1a.push_back(13);
	busline1a.push_back(14);
	busline1a.push_back(15);
	busline1a.push_back(16);
	std::map<int, double> b1aTimetable;
	b1aTimetable[0] = 800;
	b1aTimetable[7] = 750;
	b1aTimetable[14] = 650;
	b1aTimetable[21] = 500;
	b1aTimetable[28] = 650;
	b1aTimetable[35] = 750;
	b1aTimetable[42] = 800;
	b1aTimetable[50] = 800;
	b1aTimetable[60] = 800;
	tnl->setVehTimetable(5, 1, 1000, 32, busline1a, b1aTimetable);

	std::vector<int> busline1b;
	busline1b.push_back(17);
	busline1b.push_back(18);
	busline1b.push_back(19);
	busline1b.push_back(20);
	busline1b.push_back(21);
	std::map<int, double> b1bTimetable;
	b1bTimetable[0] = 800;
	b1bTimetable[7] = 750;
	b1bTimetable[14] = 650;
	b1bTimetable[21] = 500;
	b1bTimetable[28] = 650;
	b1bTimetable[35] = 750;
	b1bTimetable[42] = 800;
	b1bTimetable[50] = 800;
	b1bTimetable[60] = 800;
	tnl->setVehTimetable(6, 1, 1000, 32, busline1b, b1bTimetable);

	std::vector<int> busline30a;
	busline30a.push_back(22);
	busline30a.push_back(23);
	busline30a.push_back(24);
	busline30a.push_back(25);
	busline30a.push_back(26);
	busline30a.push_back(27);
	busline30a.push_back(28);
	std::map<int, double> b30aTimetable;
	b30aTimetable[0] = 800;
	b30aTimetable[6] = 800;
	b30aTimetable[12] = 750;
	b30aTimetable[18] = 650;
	b30aTimetable[24] = 500;
	b30aTimetable[30] = 650;
	b30aTimetable[36] = 750;
	b30aTimetable[42] = 800;
	b30aTimetable[50] = 800;
	b30aTimetable[60] = 800;
	tnl->setVehTimetable(7, 1, 1000, 32, busline30a, b30aTimetable);

	std::vector<int> busline30b;
	busline30b.push_back(29);
	busline30b.push_back(30);
	busline30b.push_back(31);
	busline30b.push_back(32);
	busline30b.push_back(33);
	busline30b.push_back(34);
	busline30b.push_back(35);
	std::map<int, double> b30bTimetable;
	b30bTimetable[0] = 800;
	b30bTimetable[6] = 800;
	b30bTimetable[12] = 750;
	b30bTimetable[18] = 650;
	b30bTimetable[24] = 500;
	b30bTimetable[30] = 650;
	b30bTimetable[36] = 750;
	b30bTimetable[42] = 800;
	b30bTimetable[50] = 800;
	b30bTimetable[60] = 800;
	tnl->setVehTimetable(8, 1, 1000, 32, busline30b, b30bTimetable);

	std::vector<int> busline71a;
	busline71a.push_back(36);
	busline71a.push_back(37);
	busline71a.push_back(38);
	std::map<int, double> b71aTimetable;
	b71aTimetable[0] = 800;
	b71aTimetable[12] = 700;
	b71aTimetable[24] = 550;
	b71aTimetable[36] = 600;
	b71aTimetable[48] = 800;
	b71aTimetable[60] = 800;
	b71aTimetable[70] = 800;
	tnl->setVehTimetable(9, 1, 1000, 100, busline71a, b71aTimetable);

	std::vector<int> busline71b;
	busline71b.push_back(39);
	busline71b.push_back(40);
	busline71b.push_back(41);
	std::map<int, double> b71bTimetable;
	b71bTimetable[0] = 800;
	b71bTimetable[12] = 700;
	b71bTimetable[24] = 550;
	b71bTimetable[36] = 600;
	b71bTimetable[48] = 800;
	b71bTimetable[60] = 800;
	b71bTimetable[70] = 800;
	tnl->setVehTimetable(10, 1, 1000, 100, busline71b, b71bTimetable);

	std::vector<int> busline9a;
	busline9a.push_back(42);
	busline9a.push_back(43);
	busline9a.push_back(44);
	busline9a.push_back(45);
	std::map<int, double> b9aTimetable;
	b9aTimetable[0] = 800;
	b9aTimetable[4] = 800;
	b9aTimetable[8] = 750;
	b9aTimetable[12] = 700;
	b9aTimetable[16] = 650;
	b9aTimetable[20] = 600;
	b9aTimetable[24] = 550;
	b9aTimetable[28] = 600;
	b9aTimetable[32] = 650;
	b9aTimetable[36] = 700;
	b9aTimetable[40] = 800;
	b9aTimetable[44] = 800;
	b9aTimetable[50] = 800;
	b9aTimetable[60] = 800;
	tnl->setVehTimetable(11, 1, 1000, 100, busline9a, b9aTimetable);

	std::vector<int> busline9b;
	busline9b.push_back(46);
	busline9b.push_back(47);
	busline9b.push_back(48);
	busline9b.push_back(49);
	std::map<int, double> b9bTimetable;
	b9bTimetable[0] = 800;
	b9bTimetable[4] = 800;
	b9bTimetable[8] = 750;
	b9bTimetable[12] = 700;
	b9bTimetable[16] = 650;
	b9bTimetable[20] = 600;
	b9bTimetable[24] = 550;
	b9bTimetable[28] = 600;
	b9bTimetable[32] = 650;
	b9bTimetable[36] = 700;
	b9bTimetable[40] = 800;
	b9bTimetable[44] = 800;
	b9bTimetable[50] = 800;
	b9bTimetable[60] = 800;
	tnl->setVehTimetable(12, 1, 1000, 100, busline9b, b9bTimetable);


	std::vector<int> busline95a;
	busline95a.push_back(50);
	busline95a.push_back(51);
	busline95a.push_back(52);
	busline95a.push_back(53);
	busline95a.push_back(54);
	busline95a.push_back(55);
	std::map<int, double> b95aTimetable;
	b95aTimetable[0] = 800;
	b95aTimetable[10] = 800;
	b95aTimetable[20] = 700;
	b95aTimetable[30] = 600;
	b95aTimetable[40] = 650;
	b95aTimetable[50] = 800;
	b95aTimetable[60] = 800;
	tnl->setVehTimetable(13, 1, 1000, 32, busline95a, b95aTimetable);

	std::vector<int> busline95b;
	busline95b.push_back(56);
	busline95b.push_back(57);
	busline95b.push_back(58);
	busline95b.push_back(59);
	busline95b.push_back(60);
	busline95b.push_back(61);
	std::map<int, double> b95bTimetable;
	b95bTimetable[0] = 800;
	b95bTimetable[10] = 800;
	b95bTimetable[20] = 700;
	b95bTimetable[30] = 600;
	b95bTimetable[40] = 650;
	b95bTimetable[50] = 800;
	b95bTimetable[60] = 800;
	tnl->setVehTimetable(14, 1, 1000, 32, busline95b, b95bTimetable);


	std::vector<int> metroline1a;
	metroline1a.push_back(62);
	metroline1a.push_back(63);
	metroline1a.push_back(64);
	metroline1a.push_back(65);
	metroline1a.push_back(66);
	metroline1a.push_back(67);
	metroline1a.push_back(68);
	std::map<int, double> m1aTimetable;
	m1aTimetable[0] = 1000;
	m1aTimetable[5] = 1000;
	m1aTimetable[10] = 1000;
	m1aTimetable[15] = 1000;
	m1aTimetable[20] = 1000;
	m1aTimetable[25] = 1000;
	m1aTimetable[30] = 1000;
	m1aTimetable[35] = 1000;
	m1aTimetable[40] = 1000;
	m1aTimetable[45] = 1000;
	m1aTimetable[55] = 1000;
	m1aTimetable[65] = 1000;
	tnl->setVehTimetable(15, 2, 1000, 200, metroline1a, m1aTimetable);

	std::vector<int> metroline1b;
	metroline1b.push_back(69);
	metroline1b.push_back(70);
	metroline1b.push_back(71);
	metroline1b.push_back(72);
	metroline1b.push_back(73);
	metroline1b.push_back(74);
	metroline1b.push_back(75);
	std::map<int, double> m1bTimetable;
	m1bTimetable[0] = 1000;
	m1bTimetable[5] = 1000;
	m1bTimetable[10] = 1000;
	m1bTimetable[15] = 1000;
	m1bTimetable[20] = 1000;
	m1bTimetable[25] = 1000;
	m1bTimetable[30] = 1000;
	m1bTimetable[35] = 1000;
	m1bTimetable[40] = 1000;
	m1bTimetable[45] = 1000;
	m1bTimetable[55] = 1000;
	m1bTimetable[65] = 1000;
	tnl->setVehTimetable(16, 2, 1000, 200, metroline1b, m1bTimetable);

}